[tool.poetry]
name = "pytket-aqt"
version = "0.29.0rc0"
description = "Extension for pytket, providing access to AQT backends"
authors = ["TKET development team <tket-support@cambridgequantum.com>"]
license = "Apache 2"
readme = "README.md"
packages = [{include = "pytket"}]
repository = "https://github.com/CQCL/pytket-aqt"
documentation = "https://cqcl.github.io/pytket-aqt/api/index.html"
classifiers= [
    "Environment :: Console",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Microsoft :: Windows",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering",
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/CQCL/pytket-aqt/issues"

[tool.poetry.dependencies]
python = ">=3.10, <3.12"
pytket = "^1.17"
requests = "^2.22"
types-requests = "*"
pydantic = "^2.0"
networkx = "^3.0"
sympy = ">=1.6"

[tool.poetry.group.tests]
optional = true

[tool.poetry.group.tests.dependencies]
pytest = "*"
pytest-timeout = "^1.4.2"
hypothesis = "*"
requests_mock = "*"
numpy = "*"

[tool.poetry.group.mypy]
optional = true

[tool.poetry.group.mypy.dependencies]
mypy = "^1.0"

[tool.poetry.group.coverage]
optional = true

[tool.poetry.group.coverage.dependencies]
coverage = {extras = ["toml"], version = ">=6.1,<8.0"}

[tool.poetry.group.pre-commit]
optional = true

[tool.poetry.group.pre-commit.dependencies]
black = ">=22.3"
pylint = "^2.13, !=2.13.6"
pre-commit = ">=2.15,<4.0"
pyupgrade = ">=2.29,<4.0"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
sphinx  = "^4.3.2"
sphinx_book_theme = ">= 1.0.1, < 2.0"
sphinx-copybutton = "*"
docutils = "*"
types-docutils = "*"

[tool.mypy]
warn_unused_configs = true
disallow_untyped_decorators = false
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
no_implicit_optional = true
strict_optional = true
namespace_packages = true
check_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = false
warn_no_return = false
warn_return_any = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = [
    'mypy-pytest.*',
    'mypy-lark.*'
]
ignore_missing_imports = true
ignore_errors = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
