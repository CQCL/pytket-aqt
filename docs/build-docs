#!/usr/bin/env python
import argparse
import shutil
import subprocess
import sys
from datetime import date
from importlib import import_module
from pathlib import Path
from typing import Any

DOCS_DIR = Path(sys.argv[0]).absolute().parent
TKET_EXAMPLES_LINK = "https://tket.quantinuum.com/examples/"
TKET_MANUAL_LINK = "https://tket.quantinuum.com/user-manual/"
TKET_WEBSITE_LINK = "https://tket.quantinuum.com/"
PYTKET_DOCS_LINK = "https://tket.quantinuum.com/api-docs/"
PYTKET_EX_DOCS_LINK = "https://tket.quantinuum.com/api-docs/extensions.html"
PYTKET_AQT_PYPI_LINK = "https://pypi.org/project/pytket-aqt/"
PYTKET_AQT_GITHUB = "https://github.com/CQCL/pytket-aqt"
MODULE = "aqt"


def get_module_version() -> Any:
    m = import_module(f"pytket.extensions.{MODULE}")
    return m.extension_version.__extension_version__.split(".")


def remove_dir(dirpath: Path) -> None:
    if dirpath.exists() and dirpath.is_dir():
        shutil.rmtree(dirpath)


def fix_links(filepath: Path) -> None:
    with open(filepath, encoding="utf8") as f:
        content = f.read()
    content = content.replace("pytket._tket", "pytket")
    with open(filepath, "w", encoding="utf8") as f:
        f.write(content)


def build_module_docs() -> None:
    v = get_module_version()
    mod_build = DOCS_DIR / "build"
    remove_dir(mod_build)
    index_rst = DOCS_DIR / "index.rst"
    with open(DOCS_DIR / "intro.txt") as f:
        content = f.readlines()
        content.append(
            "\n.. toctree::\n\t:caption: pytket documentation:\n\t:maxdepth: 1\n\n"
        )
        content.append(f"\tpytket API docs <{PYTKET_DOCS_LINK}>\n")
        content.append(f"\tpytket extensions <{PYTKET_EX_DOCS_LINK}>\n")
        content.append(f"\tManual <{TKET_MANUAL_LINK}>\n")
        content.append(f"\tExample notebooks <{TKET_EXAMPLES_LINK}>\n")
        content.append(f"\tTKET website <{TKET_WEBSITE_LINK}>\n")
        content.append("\n.. toctree::\n\t:caption: Links:\n\t:maxdepth: 1\n\n")
        content.append(f"\tbug tracker <{PYTKET_AQT_GITHUB}/issues>\n")
        content.append(f"\tGitHub <{PYTKET_AQT_GITHUB}>\n")
        content.append(f"\tPyPi <{PYTKET_AQT_PYPI_LINK}>\n")

    with open(index_rst, "w") as f:
        f.writelines(content)
    subprocess.run(
        [
            "sphinx-build",
            "-b",
            "html",
            "-D",
            f"project=pytket-{MODULE}",
            "-D",
            f"copyright={date.today().year} Cambridge Quantum Computing",
            "-D",
            f"version={'.'.join(v[:2])}",
            "-D",
            f"release={'.'.join(v)}",
            ".",
            "build",
        ],
        cwd=DOCS_DIR,
    )
    for htmlfile in mod_build.rglob("*.html"):
        fix_links(htmlfile)
    fix_links(mod_build / "searchindex.js")
    index_rst.unlink()


if __name__ == "__main__":
    parser = argparse.ArgumentParser(
        description="Build HTML documentation for pytket-aqt."
    )
    parser.add_argument("-d", "--dest", help="copy artifacts into destination folder")
    args = parser.parse_args()

    build_module_docs()

    if args.dest is not None:
        dest = Path(args.dest)
        shutil.copytree(
            DOCS_DIR / "build",
            dest,
            dirs_exist_ok=True,
        )
